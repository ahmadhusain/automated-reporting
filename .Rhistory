column_spec(column = "Species", bold = TRUE, background = "yellow")
iris %>%
head(5) %>%
kable_styling(full_width = F) %>%
column_spec(column = 5, bold = TRUE, background = "yellow")
iris %>%
head(5) %>%
kable_styling(full_width = F) %>%
column_spec(column = 5, bold = TRUE, background = "yellow")
iris %>%
head(5) %>%
kable() %>%
kable_styling(full_width = F) %>%
column_spec(column = 5, bold = TRUE, background = "yellow")
iris %>%
head(5) %>%
kable() %>%
kable_styling(full_width = F) %>%
column_spec(column = "Species", bold = TRUE, background = "yellow")
iris %>%
head(5) %>%
kable() %>%
kable_styling(full_width = F) %>%
column_spec(column = 5, bold = TRUE, background = "yellow")
iris %>%
head(5) %>%
kable() %>%
kable_styling(full_width = F) %>%
column_spec(column = 5, bold = TRUE, background = "yellow", width = "7cm")
iris %>%
head(5) %>%
kable() %>%
kable_styling(full_width = F) %>%
column_spec(column = 5, bold = TRUE, background = "yellow", width = "4cm")
iris %>%
head(5) %>%
kable() %>%
kable_styling(full_width = F) %>%
column_spec(column = 5, bold = TRUE, background = "yellow", width = "3cm")
iris %>%
head(5) %>%
kable() %>%
kable_styling(full_width = F, bootstrap_options = "striped") %>%
column_spec(column = 5, bold = TRUE, background = "yellow", width = "3cm")
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F)
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
column_spec(5:7, bold = T)
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
column_spec(2:4, bold = T)
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
column_spec(2:4, bold = T) %>%
row_spec(3:5, background = "red")
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
column_spec(2:4, bold = T) %>%
row_spec(3:5, background = "red", color = "white")
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(row = 0, angle = 45)
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(row = 0, angle = -45)
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(row = 0, angle = -45, font_size = "2")
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(row = 0, angle = -45, font_size = "5")
iris %>%
head(5) %>%
mutate(
Sepal.Length = cell_spec(Sepal.Length, format = "latex", color = ifelse(Sepal.Length > 4, "red", "blue"))
)
iris %>%
sample_n(5) %>%
mutate(
Sepal.Length = cell_spec(
x = Sepal.Length,
format = "latex",
color = ifelse(Sepal.Length > 4, "red", "blue")
),
Species = cell_spec(
x = Species,
format = "latex",
background = factor(
x = Species,
levels = c("setosa", "versicolor", "virginica"),
labels = c("yellow", "green", "dodgerblue")
)
)
)
iris %>%
sample_n(5) %>%
mutate(
Sepal.Length = cell_spec(
x = Sepal.Length,
format = "latex",
color = ifelse(Sepal.Length > 4, "red", "blue")
),
Species = cell_spec(
x = Species,
format = "latex",
background = factor(
x = Species,
levels = c("setosa", "versicolor", "virginica"),
labels = c("yellow", "green", "dodgerblue")
)
)
) %>%
kable(
format = "latex",
escape = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = F)
install.packages(c("fcuk", "parameters"))
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(kableExtra)
dt <- mtcars %>%
head(5)
dt
# basic HTML table
kable(dt)
# bootstrap theme
dt %>%
kable() %>%
kable_styling()
# bootstrap table classes. html only
dt %>%
kable() %>%
kable_styling(bootstrap_options = c("striped","hover"))
dt %>%
kable() %>%
kable_styling(bootstrap_options = c("striped", "hover", "condensed", "responsive"))
dt %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F)
dt %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "left")
dt %>%
select(mpg, cyl, disp, hp, drat) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_right")
library(tidyverse)
dt %>%
select(mpg, cyl, disp, hp, drat) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F, position = "float_right")
dt <- dt %>%
select(mpg, cyl, disp, hp, drat)
dt %>%
kable() %>%
kable_styling(bootstrap_options = "striped", font_size = 7)
# header coloring and fixing
dt %>%
kable() %>%
kable_styling(fixed_thead = list(enabled = T, background = "red"))
dt %>%
kable() %>%
kable_styling(fixed_thead = list(enabled = T, background = "dodgerblue4"))
dt %>%
kable() %>%
kable_styling(fixed_thead = list(enabled = T, background = "golden"))
dt %>%
kable() %>%
kable_styling(fixed_thead = list(enabled = T, background = "yellow"))
# highlight column
iris %>%
head(5) %>%
kable() %>%
kable_styling(full_width = F, bootstrap_options = "striped") %>%
column_spec(column = 5, bold = TRUE, background = "yellow", width = "3cm")
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
column_spec(2:4, bold = T) %>%
row_spec(3:5, background = "red", color = "white")
# header row
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(row = 0, angle = -45, font_size = "5")
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
column_spec(2:4, bold = T) %>%
row_spec(3:5, background = "yellow", color = "white")
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
column_spec(2:4, bold = T) %>%
row_spec(3:5, background = "yellow", color = "black")
# header row
iris %>%
head(5) %>%
kable() %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
row_spec(row = 0, angle = -45, font_size = "5")
# conditional logic
iris %>%
sample_n(5) %>%
mutate(
Sepal.Length = cell_spec(
x = Sepal.Length,
format = "latex",
color = ifelse(Sepal.Length > 5, "red", "blue")
),
Species = cell_spec(
x = Species,
format = "latex",
align = "c",
background = factor(
x = Species,
levels = c("setosa", "versicolor", "virginica"),
labels = c("yellow", "green", "blue")
)
)
) %>%
kable(
format = "latex",
escape = FALSE
) %>%
kable_styling(bootstrap_options = "striped", full_width = F) %>%
column_spec(column = 5, width = "5cm")
shiny::runApp()
iris
iris %>%
mutate(Sepal.Length.Class = cut(Sepal.Length.Class, breaks = 3))
mutate(Sepal.Length.Class = cut(Sepal.Length.Class)
iris %>%
iris %>%
mutate(Sepal.Length.Class = cut(Sepal.Length.Class))
iris %>%
mutate(Sepal.Length.Class = cut(Sepal.Length))
iris %>%
mutate(Sepal.Length.Class = cut(Sepal.Length, breaks = 3))
iris %>%
mutate(Sepal.Length.Class = cut(Sepal.Length, breaks = 3)) %>%
select(Sepal.Length.Class) %>%
levels()
iris %>%
mutate(Sepal.Length.Class = cut(Sepal.Length, breaks = 3)) %>%
pull(Sepal.Length.Class) %>%
levels()
iris %>%
mutate(Sepal.Length.Class = ntile(Sepal.Length, n = 3))
?kmeans
kmeans
shiny::runApp()
library(praise)
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
praise()
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE
)
attrition <- read.csv("data_input/data-attrition.csv")
head(attrition)
mean(attrition$monthly_income)
sum(attrition$monthly_income)/length(attrition$monthly_income)
median(attrition$monthly_income)
praise()
praise()
praise()
praise()
salary <- c(7.8, 7.5, 6, 7.5, 4.5, 105, 45, 7.5, 5.5, 4)
mean(salary)
salary <- c(7.8, 7.5, 6, 7.5, 4.5, 105, 45, 7.5, 5.5, 4)
mean(salary)
median(salary)
# 5% of observations to be trimmed
mean(retail$Profit, trim = 0.05)
# 5% of observations to be trimmed
mean(salary, trim = 0.05)
# 5% of observations to be trimmed
mean(salary, trim = 0.2)
numberoftravels <- c(2,2,3,1,0,4,2,5,1,2,4)
most <- function(x){
as.integer(names(sort(-table(x)))[1])
}
most(numberoftravels)
sum((numberoftravels - mean(numberoftravels))^2)/(length(numberoftravels)-1)
var(numberoftravels)
sqrt(var(numberoftravels))
sd(numberoftravels)
max(numberoftravels) - min(numberoftravels)
diff(range(numberoftravels))
IQR(numberoftravels)
as.numeric(quantile(numberoftravels, 0.75) - quantile(numberoftravels, 0.25))
fivenum(retail$Profit)
fivenum(attrition$monthly_income)
summary(retail$Profit)
summary(attrition$monthly_income)
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE
)
attrition <- read.csv("data_input/data-attrition.csv")
head(attrition)
sum(attrition$monthly_income)/length(attrition$monthly_income)
mean(attrition$monthly_income)
median(attrition$monthly_income)
salary <- c(7.8, 7.5, 6, 7.5, 4.5, 105, 45, 7.5, 5.5, 4)
mean(salary)
median(salary)
# 5% of observations to be trimmed
mean(salary, trim = 0.2)
numberoftravels <- c(2,2,3,1,0,4,2,5,1,2,4)
most <- function(x){
as.integer(names(sort(-table(x)))[1])
}
most(numberoftravels)
most(attrition$education_field)
names(sort(-table(attrition$education_field)))
names(sort(-table(attrition$education_field)))[1]
most <- function(x){
names(sort(-table(x)))[1]
}
most(attrition$education_field)
table(attrition$education_field)
most <- function(x){
names(sort(-table(x)))[1]
}
most(attrition$education_field)
most <- function(x){
names(sort(-table(x)))[1]
}
most(attrition$education_field)
var(numberoftravels)
hourly_rate <- attrition$hourly_rate
sum((hourly_rate - mean(hourly_rate))^2)/(length(hourly_rate) - 1)
var(hourly_rate)
sqrt(var(numberoftravels))
sqrt(var(hourly_rate))
sd(hourly_rate)
max(hourly_rate) - min(hourly_rate)
diff(range(hourly_rate))
IQR(hourly_rate)
as.numeric(quantile(hourly_rate, 0.75) - quantile(hourly_rate, 0.25))
fivenum(attrition$hourly_rate)
summary(attrition$hourly_rate)
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE
)
savings <- c(745, 2000, 1500, 68000, 461, 549, 3750, 1800, 4795)
attrition
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE
)
attrition <- read.csv("data_input/data-attrition.csv")
head(attrition)
sum(attrition$monthly_income)/length(attrition$monthly_income)
mean(attrition$monthly_income)
median(attrition$monthly_income)
salary <- c(7.8, 7.5, 6, 7.5, 4.5, 105, 45, 7.5, 5.5, 4)
mean(salary)
median(salary)
# 5% of observations to be trimmed
mean(salary, trim = 0.2)
most <- function(x){
names(sort(-table(x)))[1]
}
most(attrition$education_field)
savings <- c(745, 2000, 1500, 68000, 461, 549, 3750, 1800, 4795)
hourly_rate <- attrition$hourly_rate
sum((hourly_rate - mean(hourly_rate))^2)/(length(hourly_rate) - 1)
var(hourly_rate)
sqrt(var(hourly_rate))
sd(hourly_rate)
max(hourly_rate) - min(hourly_rate)
diff(range(hourly_rate))
IQR(hourly_rate)
as.numeric(quantile(hourly_rate, 0.75) - quantile(hourly_rate, 0.25))
fivenum(attrition$hourly_rate)
summary(attrition$hourly_rate)
attrition
rnorm(n = 10, mean = 30, sd = 6)
rnorm(n = 10, mean = 45, sd = 10)
typist_a <- c(28.1, 30.4, 34.2, 30.2, 32.2, 34.7, 32.9, 29.9, 33.7, 39.1)
typist_a <- c(72.2, 48.0, 50.4, 32.2, 40.6, 59.7, 63.6, 31.2, 49.6, 31.0)
sd(typist_a)
typist_a <- c(28.1, 30.4, 34.2, 30.2, 32.2, 34.7, 32.9, 29.9, 33.7, 39.1)
typist_b <- c(72.2, 48.0, 50.4, 32.2, 40.6, 59.7, 63.6, 31.2, 49.6, 31.0)
sd(typist_b)
sd(typist_a)
sd(typist_b)
typist_a <- c(28.1, 30.4, 34.2, 30.2, 32.2, 34.7, 32.9, 29.9, 33.7, 39.1)
typist_b <- c(72.2, 48.0, 50.4, 32.2, 40.6, 59.7, 63.6, 31.2, 49.6, 31.0)
sd(typist_a)
sd(typist_b)
mean(typist_a)
mean(typist_b)
sd(typist_a)
sd(typist_b)
paste("mean typist A:", mean(typist_a))
paste("Standard Deviation typist A:", sd(typist_a))
paste("Standard Deviation typist B:", sd(typist_b))
paste("mean typist A:", mean(typist_a))
paste("mean typist B:", mean(typist_b))
paste("Standard Deviation typist A:", round(sd(typist_a), digits = 2))
paste("Standard Deviation typist B:", round(sd(typist_b), digits = 2))
typist_a <- c(28.1, 30.4, 34.2, 30.2, 32.2, 34.7, 32.9, 29.9, 33.7, 39.1)
typist_b <- c(72.2, 48.0, 50.4, 32.2, 40.6, 59.7, 63.6, 31.2, 49.6, 31.0)
paste("Standard Deviation typist A:", round(var(typist_a), digits = 2))
paste("Standard Deviation typist B:", round(var(typist_b), digits = 2))
price.coins <- c(1.4, 0.4, 0.8, 1.1, 1.8, 2.2, 2.3, 1.2)
price.oil <- c(1.6, 1.2, 1.9, 0.8, 0.6, 1.5, 2.1, 1.5)
attrition
hourly_rate
hourly_rate <- attrition$hourly_rate
hourly_rate <- attrition$hourly_rate
monthly_income <- attrition$monthly_income
sum((hourly_rate - mean(hourly_rate))*(monthly_income - mean(monthly_income)))/(length(monthly_income)-1)
cov(hourly_rate, monthly_income)
cor(hourly_rate, monthly_income)
cov(hourly_rate, monthly_income)
attrition
??ggcorr
library(dplyr)
attrition %>%
select_if(is.numeric) %>%
cor()
years_at_company <- attrition$years_at_company
monthly_income <- attrition$monthly_income
sum((years_at_company - mean(years_at_company))*(monthly_income - mean(monthly_income)))/(length(monthly_income)-1)
cov(years_at_company, monthly_income)
cor(years_at_company, monthly_income)
attrition %>%
select_if(is.numeric) %>%
cor()
attrition %>%
select_if(is.numeric) %>%
cor() %>%
as.data.frame()
years_at_company
attrition$job_level %>% range()
cov(years_at_company, years_at_company)
var(years_at_company)
cor(years_at_company, monthly_income)
cov(years_at_company, monthly_income) / sqrt(var(years_at_company)*var(monthly_income))
knitr::opts_chunk$set(
echo = TRUE,
warning = FALSE,
message = FALSE
)
devtools::install_github("easystats/easystats")
devtools::install_github("easystats/easystats")
library(easystats)
library(reports)
devtools::install_github("easystats/report")
library(report)
devtools::install_github("easystats/report")
install.packages("report")
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
library(report)
